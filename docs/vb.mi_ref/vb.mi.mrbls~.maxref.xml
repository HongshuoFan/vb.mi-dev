<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="vb.mi.mrbls~" module="msp" category="MSP Operators, MSP Functions">
	<digest>
		A source of random gates and sequences
	</digest>
	<description>
        The <o>vb.mi.mrbls~</o> object is a clone of the 'Marbles' Eurorack module made by Mutable Instruments (Original author: Émilie Gillet). <br />
        You can use <o>vb.mi.mrbls~</o> to create repeatable sequences from random data and to alter this data in many ways...
	</description>
	
	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Volker Böhm
		</metadata>
		<metadata name="tag">
			MSP
		</metadata>
		<metadata name="tag">
			MSP Operators
		</metadata>
		<metadata name="tag">
			MSP Functions
		</metadata>
	</metadatalist>
	
	
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="signal">
			<digest>
				(signal) external clock input
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
		<inlet id="1" type="signal">
			<digest>
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	
	
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="signal">
			<digest>
				(signal) Gate out (t1)
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
        <outlet id="1" type="signal">
            <digest>
                (signal) Gate out (t2)
            </digest>
            <description>
                TEXT_HERE
            </description>
        </outlet>
        <outlet id="2" type="signal">
            <digest>
                (signal) Gate out (t3)
            </digest>
            <description>
                TEXT_HERE
            </description>
        </outlet>
        <outlet id="3" type="signal">
            <digest>
                (signal) y outlet
            </digest>
            <description>
                smoothed random values
            </description>
        </outlet>
        <outlet id="4" type="signal">
            <digest>
                (signal) voltage out (x1)
            </digest>
            <description>
                ...
            </description>
        </outlet>
        <outlet id="5" type="signal">
            <digest>
                (signal) voltage out (x2)
            </digest>
            <description>
                ...
            </description>
        </outlet>
        <outlet id="6" type="signal">
            <digest>
                (signal) voltage out (x3)
            </digest>
            <description>
                ...
            </description>
        </outlet>
	</outletlist>
	
	
	<!--ARGUMENTS-->
	<objarglist>
		<objarg id="0" name="OBJARG_NAME" type="OBJARG_TYPE" optional="0">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</objarg>
	</objarglist>
	
	
	<!--MESSAGES-->
	<methodlist>
		<method name="signal">
			<arglist />
			<digest>
				Synthesis model
			</digest>
			<description>
				Choose from a list of Synthesis models (input range from 0 to 1) - no interplation performed.
			</description>
		</method>
	</methodlist>


	<!--SEEALSO-->
	<seealsolist>
		<seealso name="vb.mi.brds" />
		<seealso name="vb.mi.rngs" />
		<seealso name="vb.mi.elmnts~" />
		<seealso name="vb.mi.clds~" />
	</seealsolist>
	
	
	<misc name="Output">
		<entry name="signal">
			<description>
				The main output of the oscillator. The method used in this object to calculate the cosine directly is typically less efficient than using the stored cosine in a <o>cycle~</o> object.
			</description>
		</entry>
	</misc>
</c74object>
